{"mappings":"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","sources":["src/main.ts"],"sourcesContent":["import { vec2 } from 'gl-matrix';\n\ninterface Trailer {\n  L: number;\n  box_width: number;\n  box_length: number;\n  wheel_width: number;\n  wheel_diameter: number;\n  gauge: number;\n\n  theta: number;\n}\n\ninterface Car {\n  // geometry\n  L: number; // distance from rear axle to front axle\n  box_width: number;\n  box_length: number;\n  wheel_width: number;\n  wheel_diameter: number;\n  gauge: number;\n\n  // state\n  x: number; // position of centre of rear axle\n  y: number;\n  theta: number; // car heading in radians from +X\n\n  // control\n  s: number; // speed\n  phi: number; // steer in radians from car's heading\n\n  trailers: Trailer[];\n}\n\nmain();\n\nfunction draw_car_body(ctx: CanvasRenderingContext2D, car: Car) {\n  ctx.strokeRect(\n    -(car.box_length - car.L) / 2,\n    -car.box_width / 2,\n    car.box_length,\n    car.box_width,\n  );\n}\n\nfunction draw_wheel(ctx: CanvasRenderingContext2D, car: Car) {\n  ctx.strokeRect(\n    -car.wheel_diameter / 2,\n    -car.wheel_width / 2,\n    car.wheel_diameter,\n    car.wheel_width,\n  );\n}\n\nfunction paint_car(ctx: CanvasRenderingContext2D, car: Car, zoom: number) {\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, 720, 720);\n\n  ctx.translate(360, 360);\n  ctx.scale(zoom, -zoom);\n\n  ctx.lineJoin = 'round';\n\n  const draw_radius = 0.02;\n\n  ctx.lineWidth = draw_radius;\n\n  ctx.translate(car.x, car.y);\n  //ctx.save();\n\n  ctx.rotate(car.theta);\n\n  ctx.beginPath();\n  ctx.arc(0, 0, 0.05, 0, 2 * Math.PI);\n  ctx.fill();\n\n  draw_car_body(ctx, car);\n\n  ctx.save();\n  ctx.translate(0, car.gauge / 2);\n  draw_wheel(ctx, car);\n  ctx.restore();\n\n  ctx.save();\n  ctx.translate(0, -car.gauge / 2);\n  draw_wheel(ctx, car);\n  ctx.restore();\n\n  let outer_wheel_angle = 0;\n  let inner_wheel_angle = 0;\n  let turning_radius = Infinity;\n\n  if (car.phi != 0) {\n    turning_radius = car.L / Math.tan(Math.abs(car.phi));\n\n    outer_wheel_angle =\n      Math.sign(car.phi) * Math.atan(car.L / (turning_radius + car.gauge / 2));\n    inner_wheel_angle =\n      Math.sign(car.phi) * Math.atan(car.L / (turning_radius - car.gauge / 2));\n  }\n\n  ctx.save();\n  ctx.strokeStyle = 'red';\n  ctx.beginPath();\n  if (isFinite(turning_radius)) {\n    ctx.arc(\n      0,\n      Math.sign(car.phi) * turning_radius,\n      turning_radius,\n      0,\n      Math.PI * 2,\n    );\n  } else {\n    ctx.moveTo(-1000, 0);\n    ctx.lineTo(1000, 0);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n  ctx.restore();\n\n  ctx.save();\n  ctx.translate(car.L, car.gauge / 2);\n  ctx.rotate(car.phi > 0 ? inner_wheel_angle : outer_wheel_angle);\n  draw_wheel(ctx, car);\n  ctx.restore();\n\n  ctx.save();\n  ctx.translate(car.L, -car.gauge / 2);\n  ctx.rotate(car.phi > 0 ? outer_wheel_angle : inner_wheel_angle);\n  draw_wheel(ctx, car);\n  ctx.restore();\n\n  // ctx.restore();\n\n  // OK now draw the trailer!\n  car.trailers.forEach((trailer) => {\n    ctx.rotate(trailer.theta);\n    ctx.translate(-trailer.L, 0);\n\n    ctx.save();\n    ctx.translate(0, trailer.gauge / 2);\n    draw_wheel(ctx, car);\n    ctx.restore();\n\n    ctx.save();\n    ctx.translate(0, -trailer.gauge / 2);\n    draw_wheel(ctx, car);\n    ctx.restore();\n\n    ctx.strokeRect(\n      -trailer.box_length / 2,\n      -trailer.box_width / 2,\n      trailer.box_length,\n      trailer.box_width,\n    );\n\n    ctx.strokeRect(\n      trailer.box_length / 2,\n      0,\n      trailer.L - trailer.box_length / 2,\n      0,\n    );\n\n    ctx.beginPath();\n    ctx.arc(trailer.L, 0, 0.05, 0, 2 * Math.PI);\n    ctx.fill();\n  });\n}\n\nfunction main() {\n  const car: Car = {\n    L: 3,\n    box_length: 4,\n    box_width: 2,\n    wheel_width: 0.25,\n    wheel_diameter: 0.75,\n    gauge: 1.5,\n\n    x: 0,\n    y: 0,\n    theta: Math.PI / 2,\n\n    s: 0,\n    phi: 0,\n\n    trailers: [\n      //   {\n      //   L: 3,\n      //   box_length: 2,\n      //   box_width: 2,\n      //   wheel_width: 0.25,\n      //   wheel_diameter: 0.75,\n      //   gauge: 1.5,\n      //   theta: Math.PI / 3\n      // },\n      // {\n      //   L: 3,\n      //   box_length: 2,\n      //   box_width: 2,\n      //   wheel_width: 0.25,\n      //   wheel_diameter: 0.75,\n      //   gauge: 1.5,\n      //   theta: Math.PI / 3\n      // },\n    ],\n  };\n\n  let zoom = 40;\n\n  const simulation_canvas: HTMLCanvasElement = document.getElementById(\n    'simulation',\n  ) as HTMLCanvasElement;\n  const simulation_ctx = simulation_canvas.getContext('2d');\n\n  if (simulation_ctx) paint_car(simulation_ctx, car, zoom);\n\n  let left = false;\n  let right = false;\n  let up = false;\n  let down = false;\n\n  window.addEventListener('keydown', (event) => {\n    if (event.key === 'ArrowLeft') left = true;\n    if (event.key === 'ArrowRight') right = true;\n    if (event.key === 'ArrowUp') up = true;\n    if (event.key === 'ArrowDown') down = true;\n\n    let dirty = false;\n\n    if (event.key === '+') {\n      zoom *= 2;\n      dirty = true;\n    }\n\n    if (event.key === '-') {\n      zoom /= 2;\n      dirty = true;\n    }\n\n    if (event.key === 't') {\n      let trailer: Trailer = {\n        L: 3,\n        box_length: 2,\n        box_width: 2,\n        wheel_width: 0.25,\n        wheel_diameter: 0.75,\n        gauge: 1.5,\n\n        theta: 0,\n      };\n\n      car.trailers.push(trailer);\n      dirty = true;\n    }\n\n    if (dirty || left || right || up || down)\n      window.requestAnimationFrame(step);\n  });\n\n  window.addEventListener('keyup', (event) => {\n    if (event.key === 'ArrowLeft') left = false;\n    if (event.key === 'ArrowRight') right = false;\n    if (event.key === 'ArrowUp') up = false;\n    if (event.key === 'ArrowDown') down = false;\n  });\n\n  let start, prev_timestamp;\n  let stale = false;\n\n  function step(timestamp: DOMHighResTimeStamp) {\n    if (start === undefined) {\n      start = timestamp;\n    }\n\n    const elapsed = timestamp - prev_timestamp;\n\n    if (isFinite(elapsed) && prev_timestamp !== timestamp) {\n      if (!stale) {\n        // TODO update car.xy, car.theta according to car.s, car.phi, elapsed\n        car.x += (elapsed / 400) * car.s * Math.cos(car.theta);\n        car.y += (elapsed / 400) * car.s * Math.sin(car.theta);\n\n        let theta_inc = (((elapsed / 400) * car.s) / car.L) * Math.tan(car.phi);\n        car.theta += theta_inc;\n\n        let cumulative = theta_inc;\n\n        for (var i = 0; i < car.trailers.length; ++i) {\n          let product = 1;\n          for (var j = 0; j < i; ++j) {\n            product *= Math.cos(-car.trailers[j].theta);\n          }\n\n          theta_inc =\n            (((elapsed / 400) * car.s) / car.trailers[i].L) *\n              product *\n              Math.sin(-car.trailers[i].theta) -\n            cumulative;\n\n          cumulative += theta_inc;\n\n          car.trailers[i].theta += theta_inc;\n        }\n\n        // then update car.s, car.phi according to keyboard input\n        if (left) car.phi += elapsed / 1000;\n        if (right) car.phi -= elapsed / 1000;\n        car.phi = Math.min(car.phi, Math.PI * 0.4);\n        car.phi = Math.max(car.phi, -Math.PI * 0.4);\n\n        if (up) car.s = 1;\n        else if (down) car.s = -1;\n        else car.s = 0;\n      }\n\n      if (simulation_ctx) paint_car(simulation_ctx, car, zoom);\n    }\n\n    prev_timestamp = timestamp;\n    if (left || right || up || down) {\n      window.requestAnimationFrame(step);\n      stale = false;\n    } else stale = true;\n  }\n\n  window.requestAnimationFrame(step);\n}\n"],"names":["$ad2bcec7a0192558$var$draw_wheel","ctx","car","strokeRect","wheel_diameter","wheel_width","$ad2bcec7a0192558$var$paint_car","zoom","resetTransform","clearRect","translate","scale","lineJoin","lineWidth","x","y","rotate","theta","beginPath","arc","Math","PI","fill","box_length","L","box_width","$ad2bcec7a0192558$var$draw_car_body","save","gauge","restore","outer_wheel_angle","inner_wheel_angle","turning_radius","Infinity","phi","tan","abs","sign","atan","strokeStyle","isFinite","moveTo","lineTo","stroke","closePath","trailers","forEach","trailer","s","simulation_ctx","document","getElementById","getContext","start","prev_timestamp","left","right","up","down","window","addEventListener","event","key","dirty","push","requestAnimationFrame","step","stale","timestamp","undefined","elapsed","cos","sin","theta_inc","cumulative","i","length","product","j","min","max","$ad2bcec7a0192558$var$main"],"version":3,"file":"index.3f2553a9.js.map"}